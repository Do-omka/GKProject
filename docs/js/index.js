"use strict";

function findAncestor(el, cls) {
  while ((el = el.parentElement) && !el.classList.contains(cls)) {
    ;
  }

  return el;
}

document.addEventListener('DOMContentLoaded', function (e) {
  if (document.querySelector('.ourTeam-slider')) {
    var ourTeam_slider = new Swiper('.ourTeam-slider .slider', {
      wrapperClass: 'slider-slides',
      slideClass: 'slider-slide',
      slidesPerView: 4,
      spaceBetween: 30,
      // autoHeight: true,
      navigation: {
        nextEl: '.ourTeam-slider .slider-control._next',
        prevEl: '.ourTeam-slider .slider-control._prev'
      },
      breakpoints: {
        1199: {
          slidesPerView: 3
        },
        991: {
          slidesPerView: 2
        },
        767: {
          slidesPerView: 2
        },
        575: {
          slidesPerView: 1
        }
      },
      keyboard: {
        enabled: true,
        onlyInViewport: true
      }
    });
  }

  if (document.querySelector('.loicences-slider')) {
    var _ourTeam_slider = new Swiper('.loicences-slider .slider', {
      wrapperClass: 'slider-slides',
      slideClass: 'slider-slide',
      watchSlidesVisibility: true,
      slideVisibleClass: '_visible',
      slidesPerView: 4,
      spaceBetween: 30,
      // autoHeight: true,
      navigation: {
        nextEl: '.loicences-slider .slider-control._next',
        prevEl: '.loicences-slider .slider-control._prev'
      },
      pagination: {
        el: '.loicences-slider .slider-pagination',
        bulletClass: 'slider-bullet',
        bulletActiveClass: 'slider-bullet_active',
        type: 'bullets',
        clickable: true
      },
      breakpoints: {
        1199: {
          slidesPerView: 3
        },
        991: {
          slidesPerView: 2
        },
        767: {
          slidesPerView: 2
        },
        575: {
          slidesPerView: 1
        }
      },
      keyboard: {
        enabled: true,
        onlyInViewport: true
      }
    });
  }

  var nextSlide = function nextSlide(e) {
    var dom = findAncestor(e.target, 'slide');
    dom.classList.toggle('active');

    if (dom.nextElementSibling) {
      dom.nextElementSibling.classList.toggle('active');
    } else {
      dom.parentElement.firstElementChild.classList.toggle('active');
    }
  };

  if (document.querySelectorAll('[data-js="nextSlide"]')) {
    var slides = document.querySelectorAll('[data-js="nextSlide"]');

    for (var i = 0; i < slides.length; i++) {
      slides[i].addEventListener('click', nextSlide);
    }
  }

  if (document.querySelector('#new .main_menu-mobile .navbar')) {
    (function () {
      var navbar = document.querySelector('#new .main_menu-mobile .navbar');
      var togs = navbar.querySelectorAll('.dropdown-toggle');
      var suptogs = navbar.querySelectorAll('.nav > .dropdown > .dropdown-toggle');

      for (var _i = 0; _i < togs.length; _i++) {
        togs[_i].addEventListener('click', function (e) {
          if (!e.currentTarget.parentElement.classList.contains('open')) {
            navbar.classList.add('sub');
          }
        });
      }

      var _loop = function _loop(_i2) {
        suptogs[_i2].addEventListener('click', function (e) {
          if (findAncestor(suptogs[_i2], 'dropdown').classList.contains('open')) {
            navbar.classList.remove('sub');
          }
        });
      };

      for (var _i2 = 0; _i2 < suptogs.length; _i2++) {
        _loop(_i2);
      }

      var navtogs = document.querySelectorAll('#new .main_menu-mobile .navbar-toggle');

      for (var _i3 = 0; _i3 < navtogs.length; _i3++) {
        navtogs[_i3].addEventListener('click', function (e) {
          navbar.classList.remove('sub');
        });
      }
    })();
  }

  $('.dropdown-menu .dropdown').on('hide.bs.dropdown', function (e) {
    findAncestor(e.target, 'dropdown').classList.add('open');
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
